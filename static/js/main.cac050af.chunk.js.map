{"version":3,"sources":["redux/countries/countries.js","redux/configureStore.js","components/Header.js","components/SectionHeader.js","modules/helperFunctions.js","components/countryView/CountryView.js","components/Country.js","components/homepage/FilterCountries.js","components/homepage/HomePage.js","App.js","index.js"],"names":["FETCH_COUNTRIES_REQUEST","FETCH_COUNTRIES_SUCCESS","FETCH_COUNTRIES_FAILURE","SEARCH_COUNTRY","initialState","loading","countriesDisplay","error","fetchCountries","dispatch","type","axios","get","then","response","countries","data","map","key","id","cca3","name","common","capital","region","population","flag","flags","svg","officialName","official","land","area","payload","fetchCountriesSuccess","catch","fetchCountriesFailure","message","countriesReducer","state","action","searchBox","filter","country","toLowerCase","includes","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","Header","className","to","SectionHeader","props","truncateBigNumbers","number","Math","abs","Number","toFixed","CountryView","useDispatch","countriesData","useSelector","a","useEffect","start","window","scrollTo","params","useParams","find","countryId","src","alt","Country","FilterCountries","search","event","value","target","placeholder","onChange","HomePage","length","data-testid","App","ReactDOM","render","StrictMode","basename","process","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.cac050af.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Action types\nconst FETCH_COUNTRIES_REQUEST = 'FETCH_COUNTRIES_REQUEST';\nexport const FETCH_COUNTRIES_SUCCESS = 'FETCH_COUNTRIES_SUCCESS';\nconst FETCH_COUNTRIES_FAILURE = 'FETCH_COUNTRIES_FAILURE';\nexport const SEARCH_COUNTRY = 'SEARCH_COUNTRY';\n\n// Initial state\nconst initialState = {\n  loading: false,\n  countriesDisplay: [],\n  error: '',\n};\n\n// Action creators\nexport const fetchCountriesRequest = () => ({\n  type: FETCH_COUNTRIES_REQUEST,\n});\n\nexport const fetchCountriesSuccess = (countries) => ({\n  type: FETCH_COUNTRIES_SUCCESS,\n  payload: countries,\n});\n\nexport const fetchCountriesFailure = (error) => ({\n  type: FETCH_COUNTRIES_FAILURE,\n  payload: error,\n});\n\n// Fetch countries function\nexport const fetchCountries = () => (dispatch) => {\n  dispatch(fetchCountriesRequest());\n\n  axios.get('https://restcountries.com/v3.1/all')\n\n    .then((response) => {\n      // response.data is the countries\n\n      const countries = (response.data).map((key) => {\n        const id = key.cca3;\n        const name = key.name.common;\n        const { capital, region, population } = key;\n        const flag = key.flags.svg;\n        const officialName = key.name.official;\n        const land = key.area;\n\n        const country = {\n          id, name, capital, region, population, flag, officialName, land,\n        };\n        return country;\n      });\n\n      dispatch(fetchCountriesSuccess(countries));\n    })\n    .catch((error) => {\n      // error.message is the error message\n      dispatch(fetchCountriesFailure(error.message));\n    });\n};\n\nexport const searchCountryTyping = (value) => (dispatch) => {\n  dispatch({ type: SEARCH_COUNTRY, payload: value });\n};\n\nconst countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COUNTRIES_REQUEST:\n\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case FETCH_COUNTRIES_SUCCESS:\n\n      return {\n        loading: false,\n        countries: action.payload,\n        countriesDisplay: action.payload,\n        searchBox: '',\n        error: '',\n      };\n\n    case FETCH_COUNTRIES_FAILURE:\n\n      return {\n        loading: false,\n        countries: [],\n        error: action.payload,\n      };\n\n    case SEARCH_COUNTRY:\n      return {\n        ...state,\n        countriesDisplay: state.countries.filter((country) => country.name\n          .toLowerCase().includes(action.payload.toLowerCase())),\n        searchBox: action.payload,\n      };\n\n    default: return state;\n  }\n};\n\nexport default countriesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport countriesReducer from './countries/countries';\n\nconst reducer = combineReducers({\n  countriesReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nexport default store;\n","import React from 'react';\n\nimport { FaAngleLeft } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <nav className=\"navbar fixed-top strong-pink \">\n    <Link to=\"/\" className=\"text-white\">\n      <FaAngleLeft className=\"ms-2 ms-md-3 ms-lg-5 me-2 home-arrow-button\" />\n    </Link>\n    <h1 className=\"col-10 me-4 me-md-5 me-lg-0 col-sm-10 col-lg-10 fs-4 text-white\">World of Nations</h1>\n\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SectionHeader = (props) => {\n  const { name, population } = props;\n  return (\n    <div className=\"section-header col-12 d-flex flex-column justify-content-center align-items-end\">\n      <h1 className=\"fw-bold text-white text-center m-0 p-3 px-0  pb-0 section-header-text\">{name}</h1>\n      <div className=\"d-flex flex-column\">\n        <small className=\"text-white align-self-center text-center p-0 m-0\">\n          population:\n\n          { `    ${population}` }\n        </small>\n      </div>\n    </div>\n  );\n};\n\nSectionHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  population: PropTypes.string.isRequired,\n};\n\nexport default SectionHeader;\n","const truncateBigNumbers = (number) => {\n  // Nine Zeroes for Billions\n  if ((Math.abs(Number(number))) >= 1.0e+9) {\n    return `${(Math.abs(Number(number)) / 1.0e+9).toFixed(2)} billion`;\n  }\n  // Six Zeroes for Millions\n  if (Math.abs(Number(number)) >= 1.0e+6) {\n    return `${(Math.abs(Number(number)) / 1.0e+6).toFixed(2)} million`;\n  }\n  // Three Zeroes for Thousands\n  if (Math.abs(Number(number)) >= 1.0e+3) {\n    return `${(Math.abs(Number(number)) / 1.0e+3).toFixed(2)} K`;\n  }\n  return Math.abs(Number(number));\n};\n\nexport default truncateBigNumbers;\n","import React, { useEffect } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCountries } from '../../redux/countries/countries';\nimport SectionHeader from '../SectionHeader';\nimport truncateBigNumbers from '../../modules/helperFunctions';\n\nconst CountryView = () => {\n  const dispatch = useDispatch();\n  const countriesData = useSelector((state) => state.countriesReducer);\n\n  async function start() {\n    if (countriesData.countriesDisplay !== []) {\n      await dispatch(fetchCountries());\n    }\n  }\n  useEffect(() => {\n    start();\n\n    window.scrollTo(0, 0);\n  }, []);\n\n  const params = useParams();\n  const country = countriesData.countriesDisplay.find(\n    (country) => country.id === params.countryId,\n  );\n  if (!country) {\n    return <Navigate to=\"/\" />;\n  }\n  return (\n\n    <div className=\"col-12 row m-0 mt-5 list-links text-center\">\n      {countriesData && countriesData.countriesDisplay\n        && (\n        <SectionHeader\n          name={country.name}\n          population={truncateBigNumbers(country.population)}\n        />\n        )}\n\n      <div className=\"min-vh-100 d-flex flex-column p-0\">\n        <div className=\"row p-0 p-lg-5 \">\n          <img className=\"col flag\" src={country.flag} alt=\"\" />\n        </div>\n\n        <div className=\"mb-5 mt-5 mt-lg-0 p-3\">\n          {' '}\n          <h2>Country info</h2>\n          <div className=\"d-flex flex-column\">\n            <div>\n              Official name:\n              {' '}\n              {country.officialName}\n              {' '}\n            </div>\n            <div>\n              Region:\n              {' '}\n              {country.region}\n              {' '}\n            </div>\n            <div>\n              Capital:\n              {' '}\n              {country.capital}\n              {' '}\n            </div>\n            <div>\n              Area:\n              {' '}\n              {country.land}\n              {' '}\n            </div>\n\n            <div>\n              Population:\n              {' '}\n              {country.population}\n              {' '}\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default CountryView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport truncateBigNumbers from '../modules/helperFunctions';\n\nconst Country = (props) => {\n  const {\n    id,\n    name,\n    population,\n  } = props;\n\n  return (\n    <li\n      id={id}\n      className=\"border border-white light-pink text-center collection-item d-flex flex-column justify-content-center\"\n    >\n      <h2>\n        {name}\n      </h2>\n      <span className=\"align-bottom\">\n        <small className=\"m-0\">\n          Population:\n          {' '}\n          {truncateBigNumbers(population)}\n\n        </small>\n      </span>\n    </li>\n  );\n};\n\nCountry.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  population: PropTypes.number.isRequired,\n};\n\nexport default Country;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchCountryTyping } from '../../redux/countries/countries';\n\nconst FilterCountries = () => {\n  const dispatch = useDispatch();\n  const countriesData = useSelector((state) => state.countriesReducer);\n\n  const search = (event) => {\n    dispatch(searchCountryTyping(event.target.value));\n  };\n\n  return (\n    <div className=\"row m-0 p-0 bg-dark\">\n      <form>\n        <input\n          className=\"form-control search-bar my-2\"\n          placeholder=\"Start typing country name...\"\n          value={countriesData.searchBox}\n          onChange={(event) => {\n            search(event);\n          }}\n        />\n      </form>\n    </div>\n  );\n};\nexport default FilterCountries;\n","import React, { useEffect } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SectionHeader from '../SectionHeader';\n\nimport Country from '../Country';\nimport { fetchCountries } from '../../redux/countries/countries';\nimport FilterCountries from './FilterCountries';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const countriesData = useSelector((state) => state.countriesReducer);\n\n  useEffect(() => {\n    if (countriesData.countriesDisplay.length === 0) {\n      dispatch(fetchCountries());\n    }\n    window.scrollTo(0, 0);\n  }, []);\n\n  if (countriesData.loading) {\n    return <h2 className=\"text-white\">Loading...</h2>;\n  }\n  if (countriesData.error) {\n    return <h2 className=\"text-white\">{countriesData.error}</h2>;\n  }\n\n  return (\n    <div className=\"col-12 row m-0 mt-5\" data-testid=\"countriesList\">\n      <SectionHeader name=\"Whole World\" population=\"7.753 billion\" />\n      <FilterCountries />\n      {countriesData // conditional\n           && countriesData.countriesDisplay // conditional\n               && countriesData.countriesDisplay.map(\n                 (country) => (\n                   <Link\n                     to={`/target/${country.id}`}\n                     key={country.name}\n                     className=\"p-0 col-6 col-md-4 col-lg-3 col-xl-2 list-links \"\n                   >\n                     <Country\n                       key={country.id}\n                       id={country.id}\n                       name={country.name}\n                       population={country.population}\n                     />\n                   </Link>\n                 ),\n               )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import './App.css';\nimport HomePage from './components/homepage/HomePage';\n\nfunction App() {\n  return (\n    <HomePage />\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\nimport './index.css';\nimport Header from './components/Header';\nimport CountryView from './components/countryView/CountryView';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <div className=\"min-vh-100 p-0\">\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<App />} />\n            <Route path=\"/target\" element={<CountryView />}>\n              <Route path=\":countryId\" element={<CountryView />} />\n            </Route>\n          </Routes>\n        </div>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}